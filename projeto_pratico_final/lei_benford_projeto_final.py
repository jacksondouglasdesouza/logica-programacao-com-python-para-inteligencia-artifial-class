# Atividade: PROJETO FINAL DO CURSO DE LÓGICA DE PROGRAMAÇÃO PARA DATA SCIENCE E AI COM PYTHON

# Você deve desenvolver um programa que leia pelo menos 50 números gerados naturalmente
# (por exemplo, dados contábeis).
# Estes números devem estar no código-fonte e não inseridos pelo usuário.
# O programa deve verificar a proporção da ocorrência do primeiro dígito.
# Deve mostrar, de cada dígito, a proporção esperada, de acordo com a tabela da Lei de Benford.
# Deve mostrar, de cada dígito, a proporção encontrada.
# O programa deve acusar se a diferença entre a proporção encontrada e a esperada é significativa.
# Considerar diferença significativa se for superior a 1%.
# O programa pode usar rotinas de arredondamento, tanto para proporção esperada quanto encontrada.

# Instruções:
# O programa não deve ter nenhuma dependência, nem necessitar a instalação de módulos.
# O programa deve ser um script único, mas pode implementar funções internamente.
# O programa não deve solicitar a entrada de dados pelo usuário.
# O instrutor fornece uma solução para você avaliar:
# - A solução do instrutor vai ser diferente da sua, não se preocupe, o importante é atender ao objetivo.
# - Procure desenvolver a sua solução antes de olhar a do instrutor.


dados = [
4562.73,1140.67,1436.83,1140.67,4562.73,1140.67,4562.73,1859.86,1859.86,27.66,43.2,18.23,28.94,6.09,12.19,12.19,16.15,596.31,19.12,23.58,17.47,16.72,24.5,16.49,23.32,17.15,18.54,21.58,12.3,17.02,17.02,16.2,19.13,16.49,16.83,16.83,17.47,17.47,17.18,29.45,14.7,16.04,17.31,17.19,19.15,16.47,557.09,21.08,11.64,496.94,12.93,16.93,12.82,12.94,18.04,12.15,17.17,12.17,13.43,14.97,10.33,12.19,12.19,12.5,12.92,12.15,12.35,12.35,12.33,12.33,12.18,19.88,9.95,15.95,12.63,12.19,12.94,12.14,371.36,14.57,20.15,18.21,20.16,23.94,27.77,38.08,19.05,19.05,38.08,20.16,20.16,20.16,31.02,14.95,20.16,40.33,18.78,35.12,19.06,17.98,
26.89,433.33,1120.94,542.85,542.85,1256.4,12.05,18.19,18.68,6.35,18.68,13.62,13.62,21.22,27.49,21.18,21.56,21.22,27.49,25.63,25.63,17.8,17.8,177.18,148.43,11.36,11.06,11.36,32.41,43.27,32.46,11.82,3103.72,4774.6,6445.67,47.27,236.37,3103.72,4774.6,6445.67,22.4,11.2,20.34,14.05,18.25,21.62,13.18,20.73,12.37,34.55,16.12,4.16,4.16,88.67,226.73,226.73,483.39,204.91,19.63,19.63,9.58,5.61,189.28,18.93,242.01,8.87,8.82,176.49,215.32,12.72,14.59,13.53,14.45,48.26,66.26,40.16,64.49,41.75,64.35,61.78,168.81,66.02,109.73,80.44,109.73,109.73,59.88,63.62,40.18,65.61,43.03,80.71,21.57,44.94,988.59,63.67,568.43,370.27,121.29,121.29,43.16,89.9,118.68,1977.96,127.15,63.57,48.26,109.72,877.88,109.72,62.29,63.62,109.72,67.04,48.75,390.1,127.15,10.32,15.96,11.73,11.99,10.27,11.9,15.01,16.63,11.96,25.64,16.69,11.42,15.37,16.44,16.34,13.93,15.75,12.04,14.57,14.57,11.73,7.97,11.86,16.67,15.36,12.6,11.74,14.54,10.81,11.44,19.18,16.67,12.95,16.38,16.67,16.67,16.67,938.79,11.4,11.05,559.73,131.55,41.82,109.72,121.29,57.58,62.99,37.42,112.98,480.2,304.45,2194.53,984.49,2726.75,304.45,2801.33,110.58,368.61,268.21,
40.32,806.52,11.8,18.2,11.8,30.76,39.39,42.12,5023.82,7634.93,1255.96,2511.9,5023.45,5023.45,7728.95,579.95,369.26,1242.92,2527.72,2527.72,3256.23,179.12,191.78,101.84,94.1,63.24,739.12,406,739.12,406,120.63,120.63,671.02,178.93,228.86,107.58,165.53,165.53,139.99,7.84,5.18,5.03,8.21,6.14,5.43,8.36,7.77,6.98,2.83,5.39,202.92,8.01,441.46,5.44,4.8,5.4,271.52,5.4,352.88,8.43,161.03,5.44,1743.82,272.48,544.94,9.82,169.99,169.99,15.37,14.99,208.48,3942.39,3379.19,1470.6,574.36,15.01,7.04,5.53,10,8.55,15.37,8.34,5.88,8.55,15.37,4640.04,2456.35,2456.35,2285.71,2285.71,2456.35,2456.35,1472.58,456.16,409.44,6655.44,1281.99,2886.28,1256.4,2886.28,
894.05,3150.39,6300.8,6300.8,6300.8,6300.8,6300.81,6300.8,6300.8,6300.8,6300.8,6300.8,15.83,15.83,41.87,26.29,18.12,18.12,20.07,30.9,31.99,41.87,71.21,47.48,47.48,15.82,27.21,32.01,44.33,42.17,47.48,781.58,390.76,35.33,622.45,3076.24,3076.24,984.34,1968.67,52.75,105.5,211,17.14,34.29,36.74,48.98,68.58,73.47,137.16,146.96,389.24,194.6,420.88,238.38,2244.17,4208.97,419.99,7.64,5.86,13.89,3.44,4.97,4.97,6.33,4.27,2952.25,6.91,4.6,4.63,4.05,7.64,36.42,14.15,4.97,
6.82,3.94,153.58,65.9,926.37,14.2,4.43,4.83,4.97,4.97,10.82,18.13,4.63,12.82,4.97,13.89,6.82,6.02,4.85,383.54,4.9,3.66,4.9,213.94,427.88,3.45,5.17,8.54,3.43,5.55,5.31,6.9,5.54,3.86,285.34,52.89,264.65,529.2,441.55,44155.44,4415.54,441.55,22077.71,2207.77,220.77,4415.54,44.15,226.14,204.03,241.14,241.14,215.6,438.84,215.36,220.77,215.36,2153.55,21535.51,177.69,177.83,177.76,104.78,207.81,29.51,1627.4,27.03,30.65,29.64,86.15,80.52,15.88,31.8,63.6,15.83,44.48,29.64,30.65,81.31,121.79,223.37,114.57,76.18,50.85,37.23,81.52,31.86,20.48,40.94,81.89,122.84,20.48,40.94,81.89,122.84,11.93,75.65,61.3,85.89,31.86,66.1,64.07,30.96,15.83,56.58,1230.82,31.37,1303.12,70.97,29.64,14.97,74.47,74.47,
30.26,90.78,74.47,74.47,27425.11,27425.11,192114.88,96057.4,43225.85,67240.2,1249.45,1249.45,1194.17,1194.17,1092.35,56.93,143.91,57.51,145.39,930.42,1271.46,256.27,594.41,792.55,990.72,148.63,198.14,247.66,1188.87,1585.13,1981.44,297.18,396.3,495.38,198.42,49.62,396.3,99.04,2972.15,5944.32,743.02,1313.99,2189.99,8759.95,910.88,2612.14,3918.21,5224.29,653.03,7836.44,1306.07,1959.11,7648.32,956.04,3824.15,11472.47,1912.08,2799.15,30.67,30.67,61.33,88.63,92,148.94,345.56,107.11,189.55,448.7,42.7,63.53,448.7,439.52,683.34,820.01,1719.63,4243.32,388.61,5980.19,74.04,423.59,423.59,4243.32,49.14,74.04,423.59,590.2,889.28,4243.32,194.97,311.06,953.56,1222.55,94.77,1151.5,34.91,419.56,79.43,934.04,441.15,1426.32,106.51,1278.31,92.68,
1112.21,1089.44,364.83,607.47,1048.53,1624.99,135.4,2083.74,160.42,52.08,161.08,1867.36,52.08,1749.72,145.8,625.66,1591.72,1048.53,1048.53,1048.53,12582.45,5650.28,14125.89,2825.13,2825.13,5650.28,14126.33,88.53,88.52,88.05,57.54,574.39,861.62,1723.22,143.6,252.83,566.69,850.05,1700.1,4588.69,1325.49,2439.81,91.14,149.03,250.26,40.18,137.65,67.72,412.97,120.56,203.18,1575.36,554.21,828.55,1494.45,105.76,2307.22,591.82,1140.01,2326.81,3677.07,644.54,1224.6,1644.93,854.97,4898.12,14694.36,5961.72,17885.15,2728.79,4093.2,767.54,3007.32,9021.96,9021.96,21453.82,7151.27,2302.63,27065.88,1262.87,1537.1,1843.8,1851.23,992.91,1343.53,2075.63,4162.53,1022.31,530.13,25848.56,1327.1,3078.54,2067.61,3101.4,4135.21,516.9,6202.81,1033.8,3344.65,681.17,1362.34,4087.02,712.29,1424.6,4273.79,9.36,6.07,6.08,132.54,11.13,5.85,86.98,23.66,27.64,
17.94,17.93,16.54,31.37,17.23,152.26,6,15.81,46.55,9.74,4.4,9.39,4.33,14.51,9.1,5.81,10.81,6.28,8.31,18.11,18.43,15.89,8.45,12.39,28.32,6.33,11.57,12.25,18.43,15.05,12.55,14.92,32.65,32.72,15.11,21.34,50.34,32.7,21.75,12.39,32.7,20.23,25.01,22.8,21.8,32.72,34.36,51.55,51.71,51.75,29.79,39.7,79.63,51.74,39.7,51.74,79.63,41.95,51.74,8.36,28.32,50.34,79.63,122.73,218.13,345.01,10.96,9.45,14.51,21.27,18.41,18.41,18.41,28.32,28.32,22.57,50.34,50.34,79.63,14.15,28.28,28.3,14.15,6.49,7.2,14.06,21.08,37.5,62.92,32.72,51.76,37.9,64.35,44.22,44.22,62.3,587.87,62.3,151.49,775.61,387.8,1939.03,2578.5,1289.25,42.44,23.86,11.27,2.71,2.88,28.48,2.89,72.4,31.9,3.07,3.23,3.07,3.6,89.96,5.16,3.21,73.74,70.54,32.6,52.39,80.61,5.27,107.67,57.15,28.57,59.04,29.54,22.12,21.37,17.55,12.04,508.44,14.37,13.53,35.43,22.47,16.26,14.92,236.66,369.8,140.78,10.96,13.07,531.64,531.64,62.89,29.99,17.55,4.9
]

benford_proporcoes = [0, 30.1, 17.6, 12.5, 9.7, 7.9, 6.7, 5.8, 5.1, 4.6]
contagem_digitos = [0] * 10

for numero in dados:
    primeiro_digito = int(str(numero)[0])
    contagem_digitos[primeiro_digito] += 1
#--

total_numeros = len(dados)
proporcao_encontrada = [0] * 10

for i in range(1, 10):
    proporcao_encontrada[i] = (contagem_digitos[i] / total_numeros) * 100
#--

print("Dígito | Proporção Esperada (%) | Proporção Encontrada (%) | Diferença (%)")
print("-------|-----------------------|--------------------------|---------------")

for i in range(1, 10):
    esperado = benford_proporcoes[i]
    encontrado = proporcao_encontrada[i]
    diferenca = abs(esperado - encontrado)
    print("%5d   | %21.1f   | %24.1f   | %12.1f" % (i, esperado, encontrado, diferenca))
    #--
    if diferenca > 1:
        print("** Diferença significativa encontrada no dígito %d: %.1f%% **" % (i, diferenca))
    #--
#--